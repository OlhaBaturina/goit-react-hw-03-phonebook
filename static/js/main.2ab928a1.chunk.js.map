{"version":3,"sources":["Components/Filter/Filter.module.css","Components/Form/Form.module.css","Components/Form/Form.js","Components/Contact/Contact.js","Components/Filter/Filter.js","App.js","index.js","Components/Contact/Contact.module.css"],"names":["module","exports","Form","state","name","number","id","uniqId","uuidv4","handleClick","event","target","value","setState","handleSubmit","preventDefault","props","submitMethod","resetState","className","s","thumb","onSubmit","this","htmlFor","input","type","pattern","title","required","onChange","button","Component","Contacts","contacts","deleteFunction","map","contact","contactList","onClick","Filter","label","App","filter","getSubmitData","data","find","toLowerCase","toast","error","prevState","changeFilterValue","getVisibleContacts","includes","handelDelete","localStorage","getItem","parsedContacts","JSON","parse","prevProps","console","log","setItem","stringify","visibleContacts","Contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,4DCAxDD,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,KAAO,mBAAmB,MAAQ,oBAAoB,OAAS,uB,8JCmE9FC,E,4MA3DXC,MAAQ,CAAEC,KAAM,GAAIC,OAAQ,GAAIC,GAAI,I,EAEpCC,OAASC,c,EAETC,YAAc,SAAAC,GAAU,IAAD,EACnB,EAA4BA,EAAMC,OAA1BC,EAAR,EAAQA,MAAOR,EAAf,EAAeA,KAAME,EAArB,EAAqBA,GACrB,EAAKO,UAAL,mBAAiBT,EAAOQ,GAAxB,mBAAmCN,GAAnC,K,EAGJQ,aAAe,SAAAJ,GACXA,EAAMK,iBACN,EAAKC,MAAMC,aAAa,EAAKd,OAC7B,EAAKe,c,EAGTA,WAAa,WACT,EAAKL,SAAS,CAAET,KAAM,GAAIC,OAAQ,GAAIC,GAAI,M,4CAG9C,WACI,OACI,uBAAMa,UAAWC,IAAEC,MAAOC,SAAUC,KAAKT,aAAzC,UACI,wBAAOU,QAASD,KAAKhB,OAArB,UACI,sBAAMY,UAAWC,IAAEhB,KAAnB,kBACA,uBACIe,UAAWC,IAAEK,MACbC,KAAK,OACLtB,KAAK,OACLuB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRjB,MAAOW,KAAKpB,MAAMC,KAClB0B,SAAUP,KAAKd,YACfH,GAAIE,mBAIZ,kCACI,sBAAMW,UAAWC,IAAEhB,KAAnB,oBACA,uBACIsB,KAAK,MACLP,UAAWC,IAAEK,MACbrB,KAAK,SACLuB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUP,KAAKd,YACfG,MAAOW,KAAKpB,MAAME,OAClBC,GAAIE,mBAGZ,wBAAQkB,KAAK,SAASP,UAAWC,IAAEW,OAAnC,iC,GAvDGC,a,gCC6BJC,EA9BE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eAC1B,OACI,8BACI,oBAAIhB,UAAWC,IAAEC,MAAjB,SACKa,EAASE,KAAI,SAAAC,GACV,OACI,qBAAIlB,UAAWC,IAAEkB,YAAjB,UACKD,EAAQjC,KADb,KACqBiC,EAAQhC,OACzB,wBACIc,UAAWC,IAAEW,OACbL,KAAK,SACLa,QAAS,WACLJ,EAAeE,EAAQ/B,KAJ/B,sBAF+B+B,EAAQ/B,Y,iBCapDkC,EAnBA,SAAC,GAAyB,IAAvB5B,EAAsB,EAAtBA,MAAOkB,EAAe,EAAfA,SACrB,OACI,wBAAOX,UAAWC,IAAEqB,MAApB,mCAEI,uBACItB,UAAWC,IAAEK,MACbC,KAAK,OACLd,MAAOA,EACPkB,SAAUA,Q,iBC+EXY,E,4MAlFXvC,MAAQ,CACJ+B,SAAU,CACN,CAAE5B,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEC,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,cAElDsC,OAAQ,I,EAsBZC,cAAgB,SAAAC,GAER,EAAK1C,MAAM+B,SAASY,MAChB,SAAAT,GAAO,OACHA,EAAQjC,KAAK2C,gBAAkBF,EAAKzC,KAAK2C,iBAGjDC,IAAMC,MAAM,2BAIhB,EAAKpC,UAAS,SAAAqC,GACV,MAAO,CAAEhB,SAAS,GAAD,mBAAMgB,EAAUhB,UAAhB,CAA0BW,S,EAInDM,kBAAoB,SAAAzC,GAChB,EAAKG,SAAS,CAAE8B,OAAQjC,EAAMC,OAAOC,S,EAGzCwC,mBAAqB,WACjB,MAA6B,EAAKjD,MAA1B+B,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,OAClB,OAAOT,EAASS,QAAO,SAAAN,GAAO,OAC1BA,EAAQjC,KAAK2C,cAAcM,SAASV,EAAOI,mB,EAInDO,aAAe,SAAAT,GACX,EAAKhC,UAAS,SAAAqC,GAAS,MAAK,CACxBhB,SAAUgB,EAAUhB,SAASS,QAAO,SAAAN,GAAO,OAAIA,EAAQ/B,KAAOuC,U,uDAhDtE,WACI,IAAMX,EAAWqB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMzB,GAE9BuB,GACAlC,KAAKV,SAAS,CAAEqB,SAAUuB,M,gCAIlC,SAAmBG,EAAWV,GACtB3B,KAAKpB,MAAM+B,WAAagB,EAAUhB,WAClC2B,QAAQC,IAAI,iHACZP,aAAaQ,QACT,WACAL,KAAKM,UAAUzC,KAAKpB,MAAM+B,c,oBAsCtC,WACI,IAAQS,EAAWpB,KAAKpB,MAAhBwC,OACFsB,EAAkB1C,KAAK6B,qBAE7B,OACI,qCACI,oBAAIjC,UAAWC,IAAEQ,MAAjB,uBACA,cAAC,EAAD,CAAMX,aAAcM,KAAKqB,gBACzB,oBAAIzB,UAAWC,IAAEQ,MAAjB,sBACA,cAAC,EAAD,CAAQhB,MAAO+B,EAAQb,SAAUP,KAAK4B,oBACtC,cAACe,EAAD,CACIhC,SAAU+B,EACV9B,eAAgBZ,KAAK+B,eAEzB,cAAC,IAAD,W,GA7EEtB,aCHlBmC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U,kBCR5BvE,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,YAAc,6BAA6B,OAAS,2B","file":"static/js/main.2ab928a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3vhUR\",\"input\":\"Filter_input__1c9KN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumb\":\"Form_thumb__2T3LJ\",\"name\":\"Form_name__3iSKW\",\"input\":\"Form_input__kX62X\",\"button\":\"Form_button__ioQ3i\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Form.module.css';\n\nclass Form extends Component {\n    static propTypes = {\n        submitMethod: PropTypes.func.isRequired,\n    };\n    state = { name: '', number: '', id: '' };\n\n    uniqId = uuidv4();\n\n    handleClick = event => {\n        const { value, name, id } = event.target;\n        this.setState({ [name]: value, id: id });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.submitMethod(this.state);\n        this.resetState();\n    };\n\n    resetState = () => {\n        this.setState({ name: '', number: '', id: '' });\n    };\n\n    render() {\n        return (\n            <form className={s.thumb} onSubmit={this.handleSubmit}>\n                <label htmlFor={this.uniqId}>\n                    <span className={s.name}>Name</span>\n                    <input\n                        className={s.input}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        value={this.state.name}\n                        onChange={this.handleClick}\n                        id={uuidv4()}\n                    />\n                </label>\n\n                <label>\n                    <span className={s.name}>Number</span>\n                    <input\n                        type=\"tel\"\n                        className={s.input}\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        onChange={this.handleClick}\n                        value={this.state.number}\n                        id={uuidv4()}\n                    />\n                </label>\n                <button type=\"submit\" className={s.button}>\n                    Save contact\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Contact.module.css';\n\nconst Contacts = ({ contacts, deleteFunction }) => {\n    return (\n        <div>\n            <ul className={s.thumb}>\n                {contacts.map(contact => {\n                    return (\n                        <li className={s.contactList} key={contact.id}>\n                            {contact.name}: {contact.number}\n                            <button\n                                className={s.button}\n                                type=\"button\"\n                                onClick={() => {\n                                    deleteFunction(contact.id);\n                                }}\n                            >\n                                Delete\n                            </button>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n};\n\nContacts.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    deleteFunction: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n    return (\n        <label className={s.label}>\n            Filter contact by name\n            <input\n                className={s.input}\n                type=\"text\"\n                value={value}\n                onChange={onChange}\n            />\n        </label>\n    );\n};\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport Form from './Components/Form/Form';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Contacts from './Components/Contact/Contact';\nimport Filter from './Components/Filter/Filter';\nimport s from './App.css';\n\nclass App extends Component {\n    state = {\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        filter: '',\n    };\n\n    componentDidMount() {\n        const contacts = localStorage.getItem('contacts');\n        const parsedContacts = JSON.parse(contacts);\n\n        if (parsedContacts) {\n            this.setState({ contacts: parsedContacts });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.contacts !== prevState.contacts) {\n            console.log('Обновились контакты');\n            localStorage.setItem(\n                'contacts',\n                JSON.stringify(this.state.contacts),\n            );\n        }\n    }\n\n    getSubmitData = data => {\n        if (\n            this.state.contacts.find(\n                contact =>\n                    contact.name.toLowerCase() === data.name.toLowerCase(),\n            )\n        ) {\n            toast.error('This name is also here!');\n            return;\n        }\n\n        this.setState(prevState => {\n            return { contacts: [...prevState.contacts, data] };\n        });\n    };\n\n    changeFilterValue = event => {\n        this.setState({ filter: event.target.value });\n    };\n\n    getVisibleContacts = () => {\n        const { contacts, filter } = this.state;\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\n        );\n    };\n\n    handelDelete = data => {\n        this.setState(prevState => ({\n            contacts: prevState.contacts.filter(contact => contact.id !== data),\n        }));\n    };\n\n    render() {\n        const { filter } = this.state;\n        const visibleContacts = this.getVisibleContacts();\n\n        return (\n            <>\n                <h1 className={s.title}>PhoneBook</h1>\n                <Form submitMethod={this.getSubmitData} />\n                <h2 className={s.title}>Contacts</h2>\n                <Filter value={filter} onChange={this.changeFilterValue} />\n                <Contacts\n                    contacts={visibleContacts}\n                    deleteFunction={this.handelDelete}\n                />\n                <ToastContainer />\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumb\":\"Contact_thumb__2vWKH\",\"contactList\":\"Contact_contactList__rIL-X\",\"button\":\"Contact_button__3WqKo\"};"],"sourceRoot":""}